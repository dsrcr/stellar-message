// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RegisterScreen /> renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    {
      "alignItems": "center",
      "display": "flex",
      "justifyContent": "center",
      "paddingBottom": 32,
      "paddingLeft": 32,
      "paddingRight": 32,
      "paddingTop": 32,
    }
  }
>
  <TextInput
    autoFocus={true}
    id="email"
    inputMode="email"
    keyboardType="email-address"
    name="email"
    onChangeText={[Function]}
    placeholder="email-address"
    placeholderTextColor="gray"
    style={
      {
        "borderColor": "#d1d5db",
        "borderRadius": 12,
        "borderWidth": 2,
        "fontSize": 16,
        "lineHeight": 24,
        "marginTop": 32,
        "paddingBottom": 16,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 16,
        "width": "100%",
      }
    }
    textContentType="emailAddress"
    value=""
  />
  <View
    style={
      {
        "alignItems": "center",
        "borderColor": "#d1d5db",
        "borderRadius": 12,
        "borderWidth": 2,
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginTop": 32,
        "paddingLeft": 16,
        "paddingRight": 20,
        "width": "100%",
      }
    }
  >
    <TextInput
      id="password"
      inputMode="text"
      name="password"
      onChangeText={[Function]}
      placeholder="password"
      placeholderTextColor="gray"
      secureTextEntry={true}
      style={
        {
          "borderRadius": 12,
          "fontSize": 16,
          "lineHeight": 24,
          "paddingBottom": 16,
          "paddingTop": 16,
          "width": "100%",
        }
      }
      textContentType="password"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
    >
      <Text />
    </View>
  </View>
  <TextInput
    id="confirmPassword"
    inputMode="text"
    name="confirmPassword"
    onChangeText={[Function]}
    placeholder="confirm-password"
    placeholderTextColor="gray"
    secureTextEntry={true}
    style={
      {
        "borderColor": "#d1d5db",
        "borderRadius": 12,
        "borderWidth": 2,
        "fontSize": 16,
        "lineHeight": 24,
        "marginTop": 32,
        "paddingBottom": 16,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 16,
        "width": "100%",
      }
    }
    textContentType="password"
    value=""
  />
  <View
    style={
      [
        {
          "overflow": "hidden",
        },
        {
          "borderRadius": 2,
        },
        {
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "width": "100%",
        },
        false,
      ]
    }
    testID="RNE_BUTTON_WRAPPER"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": false,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#2089dc",
            "borderColor": "#2089dc",
            "borderRadius": 12,
            "borderWidth": 0,
            "flexDirection": "row",
            "fontSize": 18,
            "justifyContent": "center",
            "lineHeight": 28,
            "padding": 12,
            "paddingHorizontal": 14,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "fontSize": 18,
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          register
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 16,
          "lineHeight": 24,
        }
      }
    >
      already-have
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
    >
      <Text
        style={
          {
            "color": "#2089DC",
            "fontSize": "1rem",
          }
        }
      >
        login
      </Text>
    </View>
  </View>
</View>
`;
